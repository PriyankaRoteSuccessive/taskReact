{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/Crud/Created.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Created = () => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [opendata, setOpenData] = useState(false);\n  const [data, setData] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const handleOpen = () => {\n    setOpenData(true);\n    setId();\n    setUserName();\n    setEmail();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function getData() {\n    fetch(\"http://localhost:3001/users\").then(result => {\n      result.json().then(response => {\n        setData(response);\n      });\n    });\n  }\n\n  function editData(userid) {\n    let item = data[userid - 1];\n    setId(item.id);\n    setUserName(item.username);\n    setEmail(item.email);\n    setOpen(true);\n  }\n\n  function dataUpdate() {\n    let item = {\n      id,\n      username,\n      email\n    };\n    fetch(`http://localhost:3001/users/${id}`, {\n      method: 'put',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(result => {\n      result.json().then(response => {\n        getData(response);\n      });\n    });\n    setOpen(false);\n  }\n\n  function saveData() {\n    let item = {\n      id,\n      username,\n      email\n    };\n    fetch(`http://localhost:3001/users`, {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(result => {\n      result.json().then(response => {\n        getData(response);\n      });\n    });\n    setOpenData(false);\n  }\n\n  function deleteData(id) {\n    fetch(`http://localhost:3001/users/${id}`, {\n      method: 'delete'\n    }).then(result => {\n      result.json().then(response => {\n        getData(response);\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleOpen,\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: opendata,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Enter Detail's\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"id\",\n            label: \"Id\",\n            type: \"Id\",\n            fullWidth: true,\n            variant: \"standard\",\n            onChange: e => setId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"userName\",\n            label: \"UserName\",\n            type: \"userName\",\n            fullWidth: true,\n            variant: \"standard\",\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true,\n            variant: \"standard\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: saveData,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Created, \"cd6OZH+YiltEGf3EkxGEYpixnpM=\");\n\n_c = Created;\nexport default Created;\n\nvar _c;\n\n$RefreshReg$(_c, \"Created\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/Crud/Created.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","useState","useEffect","Created","open","setOpen","opendata","setOpenData","data","setData","id","setId","username","setUserName","email","setEmail","handleOpen","handleClose","getData","fetch","then","result","json","response","editData","userid","item","dataUpdate","method","headers","body","JSON","stringify","saveData","deleteData","e","target","value"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState, useEffect } from 'react';\n\nconst Created = () =>{\n    const [open, setOpen] = useState(false);\n    const [opendata, setOpenData] = useState(false);\n    const [data, setData] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [username, setUserName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n\n    const handleOpen = () => {\n        setOpenData(true);\n        setId();\n        setUserName();\n        setEmail();\n\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    useEffect(() => {\n        getData();\n    }, [])\n\n    function getData() {\n        fetch(\"http://localhost:3001/users\").then((result) => {\n            result.json().then((response) => {\n                setData(response);\n            })\n        })\n    }\n    function editData(userid) {\n        let item = data[userid - 1];\n        setId(item.id);\n        setUserName(item.username)\n        setEmail(item.email)\n        setOpen(true);\n    }\n    function dataUpdate() {\n        let item = { id, username, email }\n        fetch(`http://localhost:3001/users/${id}`,\n            {\n                method: 'put',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(item)\n\n            }).then((result) => {\n                result.json().then((response) => {\n                    getData(response);\n                })\n            })\n        setOpen(false);\n    }\n\n    function saveData() {\n       \n        let item = { id, username, email }\n\n        fetch(`http://localhost:3001/users`,\n            {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(item)\n\n            }).then((result) => {\n                result.json().then((response) => {\n                    getData(response);\n                })\n            })\n        setOpenData(false);\n    }\n\n    function deleteData(id) {\n        \n        fetch(`http://localhost:3001/users/${id}`,\n            {\n                method: 'delete'\n\n            }).then((result) => {\n                result.json().then((response) => {\n                    getData(response);\n                })\n            })\n\n    }\nreturn (\n    <>\n    <div>\n    <Button variant=\"outlined\" onClick={handleOpen}>Add User</Button>\n    <Dialog open={opendata} onClose={handleClose}>\n    <DialogTitle>Enter Detail's</DialogTitle>\n    <DialogContent>\n    <TextField autoFocus margin=\"dense\" id=\"id\" label=\"Id\" type=\"Id\" fullWidth variant=\"standard\"\n    onChange={(e) => setId(e.target.value)}/>\n    <TextField autoFocus margin=\"dense\" id=\"userName\" label=\"UserName\" type=\"userName\" fullWidth variant=\"standard\"\n     onChange={(e) => setUserName(e.target.value)}/>\n    <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Email Address\" type=\"email\" fullWidth variant=\"standard\"\n     onChange={(e) => setEmail(e.target.value)}/>\n    </DialogContent>\n    <DialogActions>\n    <Button onClick={handleClose}>Cancel</Button>\n    <Button onClick={saveData}>Save</Button>\n</DialogActions>\n</Dialog>\n</div>\n</>\n)\n}\nexport default Created;"]},"metadata":{},"sourceType":"module"}