{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/component/timer20.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // const Timer20 = () => {\n//     const [counter, setCounter] = useState(0);\n//       const Update = () => {\n//         let counter =0;\n//         const interval = setInterval(() =>{\n//           if(counter < 20){\n//         counter = counter + 1;}\n//           else if ( counter = 18){\n//              counter=0\n//               clearInterval(interval); \n//         }\n//           setCounter(counter);\n//       },  1000)\n//     }\n//     useEffect(() => {\n//       Update();\n//     },[])\n//     return (\n//       <>\n//       <h1> Counter : { counter }</h1>\n//       </>\n//     ) \n//   };\n// export default Timer20;\n// import React, { useState, useEffect } from 'react';\n// const Timer20 = () => {\n//     const [counter, setCounter] = useState(0);\n//     const [flag, setFlag] = useState(\"0\");\n//       const Update = () => {\n//         let counter =0;\n//         const interval = setInterval(() =>{\n//             console.log(flag)\n//            if(flag == \"0\"){\n//             if(counter < 20){\n//                 counter = counter + 1;\n//                   }\n//                   else {\n//                       setFlag({flag:\"1\"});\n//                       console.log(\"false\")\n//                   }\n//           setCounter(counter);\n//            }\n//            else{\n//             if(counter > 0){\n//                 counter = counter - 1;\n//                 console.log(flag)\n//                   }\n//                   else {\n//                       clearInterval(interval); \n//                       console.log(flag)\n//                   }\n//           setCounter(counter);\n//            }\n//       },  1000)\n//     }\n//     useEffect(() => {\n//       Update();\n//     },[])\n//     return (\n//       <>\n//       <h1> Counter : {counter}</h1>\n//       </>\n//     ) \n//   };\n// export default Timer20;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Timer20 = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  const Updater = () => {\n    let initialcount = count;\n    let forword = true;\n    const interval = setInterval(() => {\n      console.log(initialcount);\n\n      if (forword) {\n        if (initialcount !== 20) {\n          initialcount = initialcount + 1;\n        } else {\n          forword = false;\n          initialcount = initialcount - 1;\n        }\n      } else if (!forword) {\n        if (initialcount != 17) {\n          initialcount = initialcount - 1;\n        } else {\n          initialcount = 0;\n          clearInterval(interval);\n        }\n      }\n\n      setCount(initialcount);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    Updater();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counts: \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Timer20, \"f6rNyXb4nKr8df0VUP2jADfsx6o=\");\n\n_c = Timer20;\nexport default Timer20;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer20\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/component/timer20.js"],"names":["React","useState","useEffect","Timer20","count","setCount","Updater","initialcount","forword","interval","setInterval","console","log","clearInterval"],"mappings":";;;AAAC,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,OAAO,GAAE,MAAI;AAAA;;AAEf,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;;AACA,QAAMK,OAAO,GAAE,MAAI;AACf,QAAIC,YAAY,GAAEH,KAAlB;AACA,QAAII,OAAO,GAAC,IAAZ;AACL,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAI;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;;AACA,UAAGC,OAAH,EAAW;AACC,YAAGD,YAAY,KAAG,EAAlB,EAAqB;AACjBA,UAAAA,YAAY,GAAEA,YAAY,GAAC,CAA3B;AACD,SAFH,MAEO;AACHC,UAAAA,OAAO,GAAC,KAAR;AACAD,UAAAA,YAAY,GAAEA,YAAY,GAAC,CAA3B;AACD;AACN,OAPT,MAOc,IAAG,CAACC,OAAJ,EAAY;AACd,YAAGD,YAAY,IAAE,EAAjB,EAAoB;AAChBA,UAAAA,YAAY,GAAEA,YAAY,GAAC,CAA3B;AACF,SAFF,MAEO;AACHA,UAAAA,YAAY,GAAC,CAAb;AACIM,UAAAA,aAAa,CAACJ,QAAD,CAAb;AACN;AACJ;;AACFJ,MAAAA,QAAQ,CAACE,YAAD,CAAR;AACH,KAlBsB,EAkBrB,IAlBqB,CAA5B;AAmBE,GAtBD;;AAuBAL,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,OAAO;AACV,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI;AAAA,2BACI;AAAA,6BAAaF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKD,CAlCH;;GAAMD,O;;KAAAA,O;AAmCJ,eAAeA,OAAf","sourcesContent":[" import React, { useState, useEffect } from 'react';\n// const Timer20 = () => {\n//     const [counter, setCounter] = useState(0);\n//       const Update = () => {\n//         let counter =0;\n//         const interval = setInterval(() =>{\n//           if(counter < 20){\n//         counter = counter + 1;}\n//           else if ( counter = 18){\n//              counter=0\n//               clearInterval(interval); \n          \n//         }\n//           setCounter(counter);\n//       },  1000)\n//     }\n//     useEffect(() => {\n//       Update();\n//     },[])\n      \n//     return (\n//       <>\n//       <h1> Counter : { counter }</h1>\n//       </>\n//     ) \n//   };\n// export default Timer20;\n// import React, { useState, useEffect } from 'react';\n// const Timer20 = () => {\n//     const [counter, setCounter] = useState(0);\n//     const [flag, setFlag] = useState(\"0\");\n//       const Update = () => {\n//         let counter =0;\n\n//         const interval = setInterval(() =>{\n//             console.log(flag)\n//            if(flag == \"0\"){\n//             if(counter < 20){\n//                 counter = counter + 1;\n//                   }\n//                   else {\n//                       setFlag({flag:\"1\"});\n//                       console.log(\"false\")\n//                   }\n//           setCounter(counter);\n//            }\n//            else{\n//             if(counter > 0){\n//                 counter = counter - 1;\n//                 console.log(flag)\n//                   }\n//                   else {\n                   \n//                       clearInterval(interval); \n                 \n//                       console.log(flag)\n//                   }\n//           setCounter(counter);\n//            }\n//       },  1000)\n\n//     }\n//     useEffect(() => {\n//       Update();\n//     },[])\n      \n//     return (\n//       <>\n//       <h1> Counter : {counter}</h1>\n//       </>\n//     ) \n//   };\n// export default Timer20;\nconst Timer20 =()=>{\n\n    const [count,setCount] =useState(0);\n    const Updater =()=>{\n        let initialcount= count;\n        let forword=true;\n   const interval=  setInterval(()=>{\n    console.log(initialcount);        \n    if(forword){\n                if(initialcount!==20){\n                    initialcount= initialcount+1;\n                  }else{\n                    forword=false;\n                    initialcount= initialcount-1;      \n                  }\n            }else if(!forword){\n                if(initialcount!=17){\n                    initialcount= initialcount-1;      \n                 } else{\n                    initialcount=0;\n                        clearInterval(interval);\n                 }\n             }\n            setCount(initialcount);\n        },1000)\n    }\n    useEffect(()=>{\n        Updater();\n    },[])\n    return(\n        <>\n            <h1>Counts: {count} </h1>\n        </>\n    )\n  }\n  export default Timer20;\n\n"]},"metadata":{},"sourceType":"module"}