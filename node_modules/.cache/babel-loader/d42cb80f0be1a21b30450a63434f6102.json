{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/Crud/ShowTableData.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState } from 'react';\nimport Created from './Created';\nimport Edit from './Edit';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowTableData = () => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [opendata, setOpenData] = useState(false);\n  const [data, setData] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [tabledate, setTabledata] = useState([]);\n\n  const handleOpen = () => {\n    setOpenData(true);\n    setId();\n    setUserName();\n    setEmail();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClosed = () => {\n    setOpenData(false);\n  };\n\n  useEffect(() => {\n    getData();\n  });\n\n  function getData() {\n    axios.get(\"http://localhost:3001/users\").then(result => {\n      result.json().then(response => {\n        setData(response);\n        console.log(\"hello Data\", data);\n      });\n    });\n  }\n\n  function getData() {\n    axios.get(\"http://localhost:3001/users\").then(response => {\n      setData(response.data);\n    });\n  }\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 180,\n    height: 200\n  }, {\n    field: 'username',\n    headerName: 'Name',\n    width: 180\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    width: 180\n  }, {\n    field: 'Action',\n    headerName: 'Action',\n    width: 400,\n    renderCell: () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 80\n          }, this),\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Created, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 300,\n        width: '80%',\n        margin: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: setData,\n        columns: columns,\n        pageSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowTableData, \"zrL1w3/s5INJjuDhXNcF+nLgvIY=\");\n\n_c = ShowTableData;\nexport default ShowTableData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowTableData\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/Crud/ShowTableData.js"],"names":["React","DataGrid","useEffect","DeleteIcon","Button","useState","Created","Edit","useNavigate","useParams","axios","ShowTableData","open","setOpen","opendata","setOpenData","data","setData","id","setId","username","setUserName","email","setEmail","tabledate","setTabledata","handleOpen","handleClose","handleClosed","getData","get","then","result","json","response","console","log","columns","field","headerName","width","height","renderCell","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState } from 'react';\nimport Created from './Created';\nimport Edit from './Edit';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nconst ShowTableData = () => {\n    const [open, setOpen] = useState(false);\n    const [opendata, setOpenData] = useState(false);\n    const [data, setData] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [username, setUserName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [tabledate, setTabledata] = useState([])\n\n    const handleOpen = () => {\n        setOpenData(true);\n        setId();\n        setUserName();\n        setEmail();\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClosed = () => {\n        setOpenData(false);\n    };\n    useEffect(() => {\n        getData();\n    })\n    function getData() {\n        axios.get(\"http://localhost:3001/users\").then((result) => {\n            result.json().then((response) => {\n                setData(response);\n                console.log(\"hello Data\",data);\n            })\n        })\n    }\n\n    function getData() {\n        axios\n        .get(\"http://localhost:3001/users\")\n        .then((response) => {\n          setData(response.data);\n        })\n    }\n    \n    const columns = [\n        { field: 'id', headerName: 'ID', width: 180, height: 200 },\n        { field: 'username', headerName: 'Name', width: 180 },\n        { field: 'email', headerName: 'Email', width: 180 },\n        { field: 'Action', headerName: 'Action', width: 400,\n            renderCell: () => {\n                return (\n                    <>\n                        {/* <Button variant=\"contained\" color=\"primary\"  startIcon={<EditIcon />}>Edit</Button> */}\n                        <Edit />\n                        &nbsp; &nbsp; &nbsp; &nbsp;\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<DeleteIcon />}> Delete </Button>\n                    </>\n                );\n            }\n        }\n    ];\n\n    return (\n        <>\n            <h1>User Information</h1>\n            <Created />\n            <div style={{ height: 300, width: '80%', margin: \"50px\" }}>\n                <DataGrid rows={setData} columns={columns} pageSize={3} />\n            </div>\n        </>\n    )\n}\n\nexport default ShowTableData;"]},"metadata":{},"sourceType":"module"}