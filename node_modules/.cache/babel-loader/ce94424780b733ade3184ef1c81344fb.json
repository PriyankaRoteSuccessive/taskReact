{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import { AgGridReact } from 'ag-grid-react';\n// import 'ag-grid-community/dist/styles/ag-grid.css';\n// import 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n// import { Grid, Button } from '@material-ui/core'\n// import FormDialog from './FormDialog';\n// const Api = () =>  {\n//   const initialValue = { name: \"\", email: \"\", phone: \"\", dob: \"\" }\n//   const [gridApi, setGridApi] = useState(null)\n//   const [tableData, setTableData] = useState(null)\n//   const [open, setOpen] = React.useState(false);\n//   const [formData, setFormData] = useState(initialValue)\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleClose = () => {\n//     setOpen(false);\n//     setFormData(initialValue)\n//   };\n//   const url = `http://localhost:4000/users`\n//   const columnDefs = [\n//     { headerName: \"ID\", field: \"id\" },\n//     { headerName: \"Name\", field: \"name\", },\n//     { headerName: \"Email\", field: \"email\", },\n//     { headerName: \"phone\", field: \"phone\" },\n//     { headerName: \"Date of Birth\", field: \"dob\" },\n//     {\n//       headerName: \"Actions\", field: \"id\", cellRendererFramework: (params) => <div>\n//         <Button variant=\"outlined\" color=\"primary\" onClick={() => handleUpdate(params.data)}>Update</Button>\n//         <Button variant=\"outlined\" color=\"secondary\" onClick={() => handleDelete(params.value)}>Delete</Button>\n//       </div>\n//     }\n//   ]\n//   // calling getUsers function for first time \n//   useEffect(() => {\n//     getUsers()\n//   }, [])\n//   //fetching user data from server\n//   const getUsers = () => {\n//     fetch(url).then(resp => resp.json()).then(resp => setTableData(resp))\n//   }\n//   const onChange = (e) => {\n//     const { value, id } = e.target\n//     // console.log(value,id)\n//     setFormData({ ...formData, [id]: value })\n//   }\n//   const onGridReady = (params) => {\n//     setGridApi(params)\n//   }\n//   // setting update row data to form data and opening pop up window\n//   const handleUpdate = (oldData) => {\n//     setFormData(oldData)\n//     handleClickOpen()\n//   }\n//   //deleting a user\n//   const handleDelete = (id) => {\n//     const confirm = window.confirm(\"Are you sure, you want to delete this row\", id)\n//     if (confirm) {\n//       fetch(url + `/${id}`, { method: \"DELETE\" }).then(resp => resp.json()).then(resp => getUsers())\n//     }\n//   }\n//   const handleFormSubmit = () => {\n//     if (formData.id) {\n//       //updating a user \n//       const confirm = window.confirm(\"Are you sure, you want to update this row ?\")\n//       confirm && fetch(url + `/${formData.id}`, {\n//         method: \"PUT\", body: JSON.stringify(formData), headers: {\n//           'content-type': \"application/json\"\n//         }\n//       }).then(resp => resp.json())\n//         .then(resp => {\n//           handleClose()\n//           getUsers()\n//         })\n//     } else {\n//       // adding new user\n//       fetch(url, {\n//         method: \"POST\", body: JSON.stringify(formData), headers: {\n//           'content-type': \"application/json\"\n//         }\n//       }).then(resp => resp.json())\n//         .then(resp => {\n//           handleClose()\n//           getUsers()\n//         })\n//     }\n//   }\n//   const defaultColDef = {\n//     sortable: true,\n//     flex: 1, filter: true,\n//     floatingFilter: true\n//   }\n//   return (\n//     <div className=\"App\">\n//       <h1 align=\"center\">React-App</h1>\n//       <h3>CRUD Operation with Json-server in ag-Grid</h3>\n//       <Grid align=\"right\">\n//         <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Add user</Button>\n//       </Grid>\n//       <div className=\"ag-theme-alpine\" style={{ height: '400px' }}>\n//         <AgGridReact\n//           rowData={tableData}\n//           columnDefs={columnDefs}\n//           defaultColDef={defaultColDef}\n//           onGridReady={onGridReady}\n//         />\n//       </div>\n//       <FormDialog open={open} handleClose={handleClose}\n//         data={formData} onChange={onChange} handleFormSubmit={handleFormSubmit} />\n//     </div>\n//   );\n// }\n// export default Api;","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/CrudApi/api.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import { AgGridReact } from 'ag-grid-react';\n// import 'ag-grid-community/dist/styles/ag-grid.css';\n// import 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n// import { Grid, Button } from '@material-ui/core'\n// import FormDialog from './FormDialog';\n// const Api = () =>  {\n//   const initialValue = { name: \"\", email: \"\", phone: \"\", dob: \"\" }\n\n//   const [gridApi, setGridApi] = useState(null)\n//   const [tableData, setTableData] = useState(null)\n//   const [open, setOpen] = React.useState(false);\n//   const [formData, setFormData] = useState(initialValue)\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//     setFormData(initialValue)\n//   };\n//   const url = `http://localhost:4000/users`\n//   const columnDefs = [\n//     { headerName: \"ID\", field: \"id\" },\n//     { headerName: \"Name\", field: \"name\", },\n//     { headerName: \"Email\", field: \"email\", },\n//     { headerName: \"phone\", field: \"phone\" },\n//     { headerName: \"Date of Birth\", field: \"dob\" },\n//     {\n//       headerName: \"Actions\", field: \"id\", cellRendererFramework: (params) => <div>\n//         <Button variant=\"outlined\" color=\"primary\" onClick={() => handleUpdate(params.data)}>Update</Button>\n//         <Button variant=\"outlined\" color=\"secondary\" onClick={() => handleDelete(params.value)}>Delete</Button>\n//       </div>\n//     }\n//   ]\n//   // calling getUsers function for first time \n//   useEffect(() => {\n//     getUsers()\n//   }, [])\n\n//   //fetching user data from server\n//   const getUsers = () => {\n//     fetch(url).then(resp => resp.json()).then(resp => setTableData(resp))\n//   }\n//   const onChange = (e) => {\n//     const { value, id } = e.target\n//     // console.log(value,id)\n//     setFormData({ ...formData, [id]: value })\n//   }\n//   const onGridReady = (params) => {\n//     setGridApi(params)\n//   }\n\n//   // setting update row data to form data and opening pop up window\n//   const handleUpdate = (oldData) => {\n//     setFormData(oldData)\n//     handleClickOpen()\n//   }\n//   //deleting a user\n//   const handleDelete = (id) => {\n//     const confirm = window.confirm(\"Are you sure, you want to delete this row\", id)\n//     if (confirm) {\n//       fetch(url + `/${id}`, { method: \"DELETE\" }).then(resp => resp.json()).then(resp => getUsers())\n\n//     }\n//   }\n//   const handleFormSubmit = () => {\n//     if (formData.id) {\n//       //updating a user \n//       const confirm = window.confirm(\"Are you sure, you want to update this row ?\")\n//       confirm && fetch(url + `/${formData.id}`, {\n//         method: \"PUT\", body: JSON.stringify(formData), headers: {\n//           'content-type': \"application/json\"\n//         }\n//       }).then(resp => resp.json())\n//         .then(resp => {\n//           handleClose()\n//           getUsers()\n\n//         })\n//     } else {\n//       // adding new user\n//       fetch(url, {\n//         method: \"POST\", body: JSON.stringify(formData), headers: {\n//           'content-type': \"application/json\"\n//         }\n//       }).then(resp => resp.json())\n//         .then(resp => {\n//           handleClose()\n//           getUsers()\n//         })\n//     }\n//   }\n\n//   const defaultColDef = {\n//     sortable: true,\n//     flex: 1, filter: true,\n//     floatingFilter: true\n//   }\n//   return (\n//     <div className=\"App\">\n//       <h1 align=\"center\">React-App</h1>\n//       <h3>CRUD Operation with Json-server in ag-Grid</h3>\n//       <Grid align=\"right\">\n//         <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Add user</Button>\n//       </Grid>\n//       <div className=\"ag-theme-alpine\" style={{ height: '400px' }}>\n//         <AgGridReact\n//           rowData={tableData}\n//           columnDefs={columnDefs}\n//           defaultColDef={defaultColDef}\n//           onGridReady={onGridReady}\n//         />\n//       </div>\n//       <FormDialog open={open} handleClose={handleClose}\n//         data={formData} onChange={onChange} handleFormSubmit={handleFormSubmit} />\n//     </div>\n//   );\n// }\n\n// export default Api;"]},"metadata":{},"sourceType":"module"}