{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nconst Validation = () => {\n  //   const initialValues = { username: \"\", email: \"\", password: \"\" };\n  // const [formValues, setFormValues] = useState(initialValues);\n  // const [formErrors, setFormErrors] = useState({});\n  // const [isSubmit, setIsSubmit] = useState(false);\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setFormValues({ ...formValues, [name]: value });\n  // };\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   setFormErrors(validate(formValues));\n  //   setIsSubmit(true);\n  // };\n  //   useEffect(() => {\n  //       console.log(formErrors);\n  //       if (Object.keys(formErrors).length === 0 && isSubmit) {\n  //         console.log(formValues);\n  //       }\n  //     }, [formErrors]);\n  const validate = values => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.username) {\n      errors.username = \"Username is required!\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (values.password.length < 4) {\n      errors.password = \"Password must be more than 4 characters\";\n    } else if (values.password.length > 10) {\n      errors.password = \"Password cannot exceed more than 10 characters\";\n    }\n\n    return errors;\n  };\n};\n\n_c = Validation;\nexport default Validation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/Crud/validation.js"],"names":["useState","useEffect","Validation","validate","values","errors","regex","username","email","test","password","length"],"mappings":"AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;AACA,MAAMC,UAAU,GAAG,MAAM;AACvB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AACxB,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,KAAK,GAAG,gCAAd;;AACA,QAAI,CAACF,MAAM,CAACG,QAAZ,EAAsB;AACpBF,MAAAA,MAAM,CAACE,QAAP,GAAkB,uBAAlB;AACD;;AACD,QAAI,CAACH,MAAM,CAACI,KAAZ,EAAmB;AACjBH,MAAAA,MAAM,CAACG,KAAP,GAAe,oBAAf;AACD,KAFD,MAEO,IAAI,CAACF,KAAK,CAACG,IAAN,CAAWL,MAAM,CAACI,KAAlB,CAAL,EAA+B;AACpCH,MAAAA,MAAM,CAACG,KAAP,GAAe,mCAAf;AACD;;AACD,QAAI,CAACJ,MAAM,CAACM,QAAZ,EAAsB;AACpBL,MAAAA,MAAM,CAACK,QAAP,GAAkB,sBAAlB;AACD,KAFD,MAEO,IAAIN,MAAM,CAACM,QAAP,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AACrCN,MAAAA,MAAM,CAACK,QAAP,GAAkB,yCAAlB;AACD,KAFM,MAEA,IAAIN,MAAM,CAACM,QAAP,CAAgBC,MAAhB,GAAyB,EAA7B,EAAiC;AACtCN,MAAAA,MAAM,CAACK,QAAP,GAAkB,gDAAlB;AACD;;AACD,WAAOL,MAAP;AACD,GAnBJ;AAoBF,CA1CD;;KAAMH,U;AA2CN,eAAeA,UAAf","sourcesContent":["import { useState,useEffect } from \"react\";\nconst Validation = () => {\n  //   const initialValues = { username: \"\", email: \"\", password: \"\" };\n  // const [formValues, setFormValues] = useState(initialValues);\n  // const [formErrors, setFormErrors] = useState({});\n  // const [isSubmit, setIsSubmit] = useState(false);\n\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setFormValues({ ...formValues, [name]: value });\n  // };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   setFormErrors(validate(formValues));\n  //   setIsSubmit(true);\n  // };\n  //   useEffect(() => {\n  //       console.log(formErrors);\n  //       if (Object.keys(formErrors).length === 0 && isSubmit) {\n  //         console.log(formValues);\n  //       }\n  //     }, [formErrors]);\n   const validate = (values) => {\n        const errors = {};\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n        if (!values.username) {\n          errors.username = \"Username is required!\";\n        }\n        if (!values.email) {\n          errors.email = \"Email is required!\";\n        } else if (!regex.test(values.email)) {\n          errors.email = \"This is not a valid email format!\";\n        }\n        if (!values.password) {\n          errors.password = \"Password is required\";\n        } else if (values.password.length < 4) {\n          errors.password = \"Password must be more than 4 characters\";\n        } else if (values.password.length > 10) {\n          errors.password = \"Password cannot exceed more than 10 characters\";\n        }\n        return errors;\n      };\n}\nexport default Validation;"]},"metadata":{},"sourceType":"module"}