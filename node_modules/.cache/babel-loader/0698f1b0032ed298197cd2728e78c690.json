{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/module/ShowdataTable.js\",\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactDOM from 'react-dom';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { TextareaAutosize } from '@mui/base';\nimport { useState, useRef } from 'react';\nimport { Header } from '../module';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 180\n}, {\n  field: 'username',\n  headerName: 'Name',\n  width: 180\n}, {\n  field: 'email',\n  headerName: 'Email',\n  width: 180\n}, {\n  field: \"edit\",\n  headerName: \"Edit\",\n  width: 200,\n  renderCell: () => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 64\n      }, this),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this);\n  }\n}, {\n  field: \"delete\",\n  headerName: \"Delete\",\n  width: 200,\n  renderCell: () => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 64\n      }, this),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  }\n}];\n\nconst ShowdataTable = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [tabledate, setTabledata] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/users').then(data => data.json()).then(data => setTabledata(data));\n  }, []);\n  console.log(tabledate);\n\n  const Modals = () => {\n    _s();\n\n    const [open, setOpen] = React.useState(false);\n    const [myName, setMyName] = useState();\n    const [myEmail, setMyEmail] = useState();\n    const [isSubmitted, setSubmitted] = useState(false);\n    const [pos, setPos] = useState('');\n    const [myText, setText] = useState('');\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n      setMyName('');\n      setMyEmail('');\n      setPos('');\n      setSubmitted(false);\n    };\n\n    const handleSubmit = () => {\n      setOpen(false);\n      setSubmitted(true);\n    };\n\n    const handleName = e => {\n      setMyName(e.target.value);\n      console.log(\" Name is\", myName);\n    };\n\n    const handleEmail = e => {\n      setMyEmail(e.target.value);\n      console.log(\"Email is\", myEmail);\n      ;\n    };\n\n    const handleText = e => {\n      setText(e.target.value);\n      console.log(\"Text is\", myText);\n    };\n\n    const handleChange = (e, value) => {\n      setPos(e.target.value);\n    };\n\n    const SORTERS = {\n      NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n      NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n      STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n      STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n    };\n\n    const getSorter = data => {\n      const mapper = x => x[data.field];\n\n      let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n      if (data.field === \"id\") {\n        sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n      } else {\n        sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n      }\n\n      return sorter;\n    };\n\n    let count = tasks.length;\n    const service = {\n      fetchItems: payload => {\n        let result = Array.from(tasks);\n        result = result.sort(getSorter(payload.sort));\n        return Promise.resolve(result);\n      },\n      create: task => {\n        count += 1;\n        tasks.push({ ...task,\n          id: count\n        });\n        return Promise.resolve(task);\n      },\n      update: data => {\n        const task = tasks.find(t => t.id === data.id);\n        task.title = data.title;\n        task.description = data.description;\n        return Promise.resolve(task);\n      },\n      delete: data => {\n        const task = tasks.find(t => t.id === data.id);\n        tasks = tasks.filter(t => t.id !== task.id);\n        return Promise.resolve(task);\n      }\n    };\n    const styles = {\n      container: {\n        margin: \"auto\",\n        width: \"fit-content\"\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 300,\n          width: '80%',\n          margin: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: tabledate,\n          columns: columns,\n          pageSize: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n          title: \"Task Creation\",\n          message: \"Create a new task!\",\n          trigger: \"Create Task\",\n          onSubmit: task => service.create(task),\n          submitText: \"Create\",\n          validate: values => {\n            const errors = {};\n\n            if (!values.title) {\n              errors.title = \"Please, provide task's title\";\n            }\n\n            if (!values.description) {\n              errors.description = \"Please, provide task's description\";\n            }\n\n            return errors;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n          title: \"Task Update Process\",\n          message: \"Update task\",\n          trigger: \"Update\",\n          onSubmit: task => service.update(task),\n          submitText: \"Update\",\n          validate: values => {\n            const errors = {};\n\n            if (!values.id) {\n              errors.id = \"Please, provide id\";\n            }\n\n            if (!values.title) {\n              errors.title = \"Please, provide task's title\";\n            }\n\n            if (!values.description) {\n              errors.description = \"Please, provide task's description\";\n            }\n\n            return errors;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(DeleteForm, {\n          title: \"Task Delete Process\",\n          message: \"Are you sure you want to delete the task?\",\n          trigger: \"Delete\",\n          onSubmit: task => service.delete(task),\n          submitText: \"Delete\",\n          validate: values => {\n            const errors = {};\n\n            if (!values.id) {\n              errors.id = \"Please, provide id\";\n            }\n\n            return errors;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true);\n  };\n\n  _s(Modals, \"g171pyEM3jBdKL/5W+/fmMHBaOk=\");\n};\n\n_s2(ShowdataTable, \"CWbACz2Vp8a56QEuc40L5hAt3eQ=\");\n\n_c = ShowdataTable;\nexport default ShowdataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowdataTable\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/module/ShowdataTable.js"],"names":["React","DataGrid","useEffect","EditIcon","Button","ReactDOM","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Box","InputLabel","MenuItem","FormControl","Select","TextareaAutosize","useState","useRef","Header","columns","field","headerName","width","renderCell","ShowdataTable","tabledate","setTabledata","fetch","then","data","json","console","log","Modals","open","setOpen","myName","setMyName","myEmail","setMyEmail","isSubmitted","setSubmitted","pos","setPos","myText","setText","handleClickOpen","handleClose","handleSubmit","handleName","e","target","value","handleEmail","handleText","handleChange","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","x","sorter","direction","count","tasks","length","service","fetchItems","payload","result","Array","from","sort","Promise","resolve","create","task","push","id","update","find","t","title","description","delete","filter","styles","container","margin","height","values","errors"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactDOM from 'react-dom';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { TextareaAutosize } from '@mui/base';\nimport { useState, useRef } from 'react';\nimport { Header } from '../module';\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 180 },\n  { field: 'username', headerName: 'Name',width: 180 },\n  { field: 'email',headerName: 'Email',width: 180},\n  { field: \"edit\",headerName: \"Edit\",width: 200,\n    renderCell: () => {\n      return (\n        <Button variant=\"contained\" color=\"primary\" startIcon={<EditIcon />}>\n          Edit\n        </Button>\n      );\n    }\n  },\n  { field: \"delete\",headerName: \"Delete\",width: 200,\n    renderCell: () => {\n      return (\n        <Button variant=\"contained\" color=\"primary\" startIcon={<EditIcon />}>\n          Delete\n        </Button>\n      );\n    }\n  },\n];\nconst ShowdataTable = () => {\n    const [tabledate,setTabledata]= useState([])\n    useEffect (() => {\n fetch('http://localhost:3001/users')\n   .then((data) =>data.json())\n .then((data) => setTabledata(data))\n}, [])\nconsole.log(tabledate)\nconst Modals = () =>{\n    const [open, setOpen] = React.useState(false);\n    const [myName, setMyName] = useState();\n    const [myEmail, setMyEmail] = useState();\n    const [isSubmitted, setSubmitted] = useState(false);\n    const [pos, setPos] = useState('');\n    const [myText,setText] = useState('');\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n      setMyName('');\n      setMyEmail('');\n      setPos('')\n      setSubmitted(false);\n    };\n    const handleSubmit = () => {\n      setOpen(false);\n      setSubmitted(true);\n    };\n    const handleName = (e) => {\n      setMyName(e.target.value)\n      console.log(\" Name is\", myName)\n    }\n    const handleEmail= (e) => {\n      setMyEmail(e.target.value);\n      console.log(\"Email is\", myEmail);\n      ;\n    }\n    const handleText =(e)=>{\n      setText(e.target.value);\n      console.log(\"Text is\",myText)\n    }\n  \n   \n    const handleChange = (e, value) => {\n    setPos(e.target.value);\n    }\n    const SORTERS = {\n      NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n      NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n      STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n      STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n    };\n    \n    const getSorter = data => {\n      const mapper = x => x[data.field];\n      let sorter = SORTERS.STRING_ASCENDING(mapper);\n    \n      if (data.field === \"id\") {\n        sorter =\n          data.direction === \"ascending\"\n            ? SORTERS.NUMBER_ASCENDING(mapper)\n            : SORTERS.NUMBER_DESCENDING(mapper);\n      } else {\n        sorter =\n          data.direction === \"ascending\"\n            ? SORTERS.STRING_ASCENDING(mapper)\n            : SORTERS.STRING_DESCENDING(mapper);\n      }\n    \n      return sorter;\n    };\n    \n    let count = tasks.length;\n    const service = {\n      fetchItems: payload => {\n        let result = Array.from(tasks);\n        result = result.sort(getSorter(payload.sort));\n        return Promise.resolve(result);\n      },\n      create: task => {\n        count += 1;\n        tasks.push({\n          ...task,\n          id: count\n        });\n        return Promise.resolve(task);\n      },\n      update: data => {\n        const task = tasks.find(t => t.id === data.id);\n        task.title = data.title;\n        task.description = data.description;\n        return Promise.resolve(task);\n      },\n      delete: data => {\n        const task = tasks.find(t => t.id === data.id);\n        tasks = tasks.filter(t => t.id !== task.id);\n        return Promise.resolve(task);\n      }\n    };\n    \n    const styles = {\n      container: { margin: \"auto\", width: \"fit-content\" }\n    };\n    \n  \nreturn(\n<>\n<Header/>\n<h1>hello</h1>\n<div style={{ height: 300, width: '80%', margin: \"50px\" }}>\n      <DataGrid\n        rows={tabledate}\n        columns={columns}\n        pageSize={3}\n      />\n      <CreateForm\n        title=\"Task Creation\"\n        message=\"Create a new task!\"\n        trigger=\"Create Task\"\n        onSubmit={task => service.create(task)}\n        submitText=\"Create\"\n        validate={values => {\n          const errors = {};\n          if (!values.title) {\n            errors.title = \"Please, provide task's title\";\n          }\n\n          if (!values.description) {\n            errors.description = \"Please, provide task's description\";\n          }\n\n          return errors;\n        }}\n      />\n\n      <UpdateForm\n        title=\"Task Update Process\"\n        message=\"Update task\"\n        trigger=\"Update\"\n        onSubmit={task => service.update(task)}\n        submitText=\"Update\"\n        validate={values => {\n          const errors = {};\n\n          if (!values.id) {\n            errors.id = \"Please, provide id\";\n          }\n\n          if (!values.title) {\n            errors.title = \"Please, provide task's title\";\n          }\n\n          if (!values.description) {\n            errors.description = \"Please, provide task's description\";\n          }\n\n          return errors;\n        }}\n      />\n\n      <DeleteForm\n        title=\"Task Delete Process\"\n        message=\"Are you sure you want to delete the task?\"\n        trigger=\"Delete\"\n        onSubmit={task => service.delete(task)}\n        submitText=\"Delete\"\n        validate={values => {\n          const errors = {};\n          if (!values.id) {\n            errors.id = \"Please, provide id\";\n          }\n          return errors;\n        }}\n      />\n     </div>  \n</>\n)\n}\n}\nexport default ShowdataTable;"]},"metadata":{},"sourceType":"module"}