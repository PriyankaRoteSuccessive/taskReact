{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/Crud/CrudTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Header } from '../module';\nimport Validation from \"./validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CrudTable = () => {\n  _s();\n\n  // const emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const StyledTableCell = styled(TableCell)(_ref => {\n    let {\n      theme\n    } = _ref;\n    return {\n      [`&.${tableCellClasses.head}`]: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white\n      },\n      [`&.${tableCellClasses.body}`]: {\n        fontSize: 14\n      }\n    };\n  });\n  const StyledTableRow = styled(TableRow)(_ref2 => {\n    let {\n      theme\n    } = _ref2;\n    return {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover\n      },\n      // hide last border\n      '&:last-child td, &:last-child th': {\n        border: 0\n      }\n    };\n  });\n  const [id, setId] = useState(\"\");\n  const [username, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [data, setData] = React.useState([]);\n  const [open, setOpen] = useState(false);\n  const [opendata, setOpenData] = useState(false); //   const initialValues = { username: \"\", email: \"\", password: \"\" };\n  //   const [formValues, setFormValues] = useState(initialValues);\n  //   const [formErrors, setFormErrors] = useState({});\n  //   const [isSubmit, setIsSubmit] = useState(false);\n\n  const [state, setState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  }); //   const handleChange = (e) => {\n  //     const { name, value } = e.target;\n  //     setFormValues({ ...formValues, [name]: value });\n  //   };\n  //   const handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     setFormErrors(validate(formValues));\n  //     setIsSubmit(true);\n  //   };\n\n  const handleInputChange = event => {\n    setState(prevProps => ({ ...prevProps,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleOpenData = () => {\n    setOpenData(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setId('');\n    setName('');\n    setEmail('');\n  };\n\n  const handleClosed = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []); //     console.log(formErrors);\n  //     if (Object.keys(formErrors).length === 0 && isSubmit) {\n  //       console.log(formValues);\n  //     }\n  //   }, [formErrors]);\n\n  function getData() {\n    axios.get(\"http://localhost:3001/users\").then(response => {\n      setData(response.data);\n    });\n  }\n\n  function addData() {\n    axios.post('http://localhost:3001/users', {\n      id: id,\n      username: username,\n      email: email\n    }).then(response => {\n      getData(response.data);\n    });\n    setOpenData(false);\n  }\n\n  function editData(userid) {\n    setOpen(true);\n    const item = data[userid - 1];\n    setId(item.id);\n    setName(item.username);\n    setEmail(item.email);\n  }\n\n  function update() {\n    axios.put(`http://localhost:3001/users/${id}`, {\n      id: id,\n      username: username,\n      email: email\n    }).then(response => {\n      console.log(\"resp is\", response);\n      getData(response.data);\n    });\n    setOpen(false);\n  }\n\n  function deleteUser(id) {\n    axios.delete(`http://localhost:3001/users/${id}`).then(response => {\n      getData(response.data);\n    });\n  }\n\n  const validate = values => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.username) {\n      errors.username = \"Username is required!\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleOpenData,\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: opendata,\n        onClose: handleClosed,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Enter Detail's\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"id\",\n            label: \"Id\",\n            type: \"Id\",\n            fullWidth: true,\n            variant: \"standard\",\n            value: id,\n            onChange: e => setId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"userName\",\n            label: \"UserName\",\n            type: \"userName\",\n            fullWidth: true,\n            variant: \"standard\",\n            value: formValues.username,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formErrors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true,\n            variant: \"standard\",\n            value: formValues.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formErrors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: addData,\n            children: \"Add Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"id\",\n            label: \"Id\",\n            type: \"Id\",\n            fullWidth: true,\n            variant: \"standard\",\n            value: id,\n            onChange: e => setId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"userName\",\n            label: \"UserName\",\n            type: \"userName\",\n            fullWidth: true,\n            variant: \"standard\",\n            value: username,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formErrors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true,\n            variant: \"standard\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formErrors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: update,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 700\n          },\n          \"aria-label\": \"customized table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: data.map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: row.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: row.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: row.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  style: {\n                    marginRight: 10\n                  },\n                  onClick: () => editData(row.id),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => deleteUser(row.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 17\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 15\n              }, this)]\n            }, row.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n\n_s(CrudTable, \"sUGZ3loTGp3HuHLHoCxpiwOCe9o=\");\n\n_c = CrudTable;\nexport default CrudTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrudTable\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/Crud/CrudTable.js"],"names":["React","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","useState","useEffect","axios","Header","Validation","CrudTable","emailRegex","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","action","hover","border","id","setId","username","setName","email","setEmail","data","setData","open","setOpen","opendata","setOpenData","state","setState","name","password","handleInputChange","event","prevProps","target","value","handleOpen","handleOpenData","handleClose","handleClosed","getData","get","then","response","addData","post","editData","userid","item","update","put","console","log","deleteUser","delete","validate","values","errors","regex","test","handleSubmit","e","formValues","handleChange","formErrors","minWidth","map","row","marginRight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Header } from '../module';\nimport Validation from \"./validation\";\n\nconst CrudTable =()=>{\n// const emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst emailRegex=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n \nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\nconst [id,setId]=useState(\"\");\nconst [username,setName]=useState(\"\");\nconst [email,setEmail]=useState(\"\");\nconst [data,setData]=React.useState([])\nconst [open, setOpen] = useState(false);\nconst [opendata,setOpenData] = useState(false);\n//   const initialValues = { username: \"\", email: \"\", password: \"\" };\n//   const [formValues, setFormValues] = useState(initialValues);\n//   const [formErrors, setFormErrors] = useState({});\n//   const [isSubmit, setIsSubmit] = useState(false);\nconst [state, setState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormValues({ ...formValues, [name]: value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     setFormErrors(validate(formValues));\n//     setIsSubmit(true);\n//   };\n\nconst handleInputChange = (event) => {\n    setState((prevProps) => ({\n      ...prevProps,\n      [event.target.name]: event.target.value\n    }));\n  };\nconst handleOpen = () => {\n    setOpen(true);\n    \n};\nconst handleOpenData = () =>{\n    setOpenData(true);\n}\nconst handleClose = () => {\n    setOpen(false);\n    setId('');\n   setName('');\n   setEmail('');\n};\nconst handleClosed = () => {\n    setOpen(false);\n};\nuseEffect(() => {\n    getData();\n},\n[]);\n//     console.log(formErrors);\n//     if (Object.keys(formErrors).length === 0 && isSubmit) {\n//       console.log(formValues);\n//     }\n//   }, [formErrors]);\n \n\nfunction getData() {\n    axios\n    .get(\"http://localhost:3001/users\")\n    .then((response) => {\n      setData(response.data);\n    })\n}\nfunction addData() {\n    \n    axios.post('http://localhost:3001/users', {\n         id: id,\n         username: username,\n         email: email\n       })\n         .then((response) => {\n           getData(response.data);\n         })\n         setOpenData(false);\n }\n function editData(userid) {\n    setOpen(true);\n    const item = data[userid - 1];\n    setId(item.id);\n    setName(item.username)\n    setEmail(item.email)\n    \n}\n function update() {\n    axios.put(`http://localhost:3001/users/${id}`,\n         {\n            id: id,\n            username: username,\n            email: email\n          })\n            .then((response) => {\n              console.log(\"resp is\", response)\n              getData(response.data);\n            })\n         setOpen(false);\n}\n\nfunction deleteUser(id) {\n    axios.delete(`http://localhost:3001/users/${id}`)\n    .then((response) => {\n      getData(response.data);\n    })\n}\n\nconst validate = (values) => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    if (!values.username) {\n      errors.username = \"Username is required!\";\n    }\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n    return errors;\n  };\n\n  return (\n      <>\n       <form onSubmit={handleSubmit}>\n      <Header/>\n    {/* ADD Button */}\n    <Button variant=\"outlined\" onClick={handleOpenData}>Add User</Button>\n    <Dialog open={opendata} onClose={handleClosed}>\n    <DialogTitle>Enter Detail's</DialogTitle>\n    <DialogContent>\n    <TextField autoFocus margin=\"dense\" id=\"id\" label=\"Id\" type=\"Id\" fullWidth variant=\"standard\" value={id}\n     onChange={(e) => setId(e.target.value)}/>\n    <TextField autoFocus margin=\"dense\" id=\"userName\" label=\"UserName\" type=\"userName\" fullWidth variant=\"standard\"  value={formValues.username}\n     onChange={handleChange}/>\n    {/* //  onChange={(e) => setName(e.target.value)} */}\n      <p>{formErrors.username}</p>\n    <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Email Address\" type=\"email\" fullWidth variant=\"standard\"  value={formValues.email}\n     onChange={handleChange}/>\n    {/* //  onChange={(e) => setEmail(e.target.value)} */}\n     <p>{formErrors.email}</p>\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={handleClose}>Cancel</Button>\n     <Button  onClick={addData}>Add Data</Button>\n    </DialogActions>\n    </Dialog>\n{/* Edit */}\n\n    <Dialog open={open} onClose={handleClose}>\n    <DialogTitle>Edit User</DialogTitle>\n    <DialogContent>\n    <TextField autoFocus margin=\"dense\" id=\"id\" label=\"Id\" type=\"Id\" fullWidth variant=\"standard\" value={id}\n     onChange={(e) => setId(e.target.value)}/>\n    <TextField autoFocus margin=\"dense\" id=\"userName\" label=\"UserName\" type=\"userName\" fullWidth variant=\"standard\" value={username}\n     onChange={(e) => setName(e.target.value)}/>\n      <p>{formErrors.username}</p>\n    <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Email Address\" type=\"email\" fullWidth variant=\"standard\" value={email}\n     onChange={(e) => setEmail(e.target.value)}/>\n      <p>{formErrors.email}</p>\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={handleClose}>Cancel</Button>\n    <Button type=\"submit\" onClick={update}>Update</Button>\n    </DialogActions>\n    </Dialog>\n{/* Table  */}\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell align=\"right\">ID</StyledTableCell>\n            <StyledTableCell align=\"right\">Name</StyledTableCell>\n            <StyledTableCell align=\"right\">Email</StyledTableCell>\n            <StyledTableCell align=\"right\">Action</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <StyledTableRow key={row.name}>\n              <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.username}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.email}</StyledTableCell>\n              <StyledTableCell align=\"right\">\n                <Button  variant=\"contained\" style={{marginRight:10}} onClick={() => editData(row.id)} >Edit</Button>\n                <Button  variant=\"contained\" onClick={() => deleteUser(row.id)}>Delete</Button> </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </form>\n    </>\n  );\n}\nexport default CrudTable;"]},"metadata":{},"sourceType":"module"}