{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/Crud/ShowTableData.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState, useRef } from 'react';\nimport Created from './Created';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowTableData = () => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [opendata, setOpenData] = useState(false);\n  const [data, setData] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    getData();\n  }, []);\n  const [tabledate, setTabledata] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/users').then(data => data.json()).then(data => setTabledata(data));\n  }, []);\n  console.log(tabledate);\n\n  const getData = () => {\n    fetch(\"http://localhost:3001/users\").then(result => {\n      result.json().then(response => {\n        setData(response);\n      });\n    });\n  };\n\n  const editData = userid => {\n    let item = data[userid - 1];\n    setId(item.id);\n    setUserName(item.username);\n    setEmail(item.email);\n    setOpen(true);\n  };\n\n  const deleteData = id => {\n    fetch(`http://localhost:3001/users/${id}`, {\n      method: 'delete'\n    }).then(result => {\n      result.json().then(response => {\n        getData(response);\n      });\n    });\n  };\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 180,\n    height: 200\n  }, {\n    field: 'username',\n    headerName: 'Name',\n    width: 180\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    width: 180\n  }, {\n    field: 'Action',\n    headerName: 'Action',\n    width: 400,\n    renderCell: () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: editData,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 75\n          }, this),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 1\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: deleteData,\n          startIcon: /*#__PURE__*/_jsxDEV(DeleteI, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 79\n          }, this),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Created, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 300,\n        width: '80%',\n        margin: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: tabledate,\n        columns: columns,\n        pageSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowTableData, \"+0x890K2xCc/4M6d58pJSsyda2U=\");\n\n_c = ShowTableData;\nexport default ShowTableData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowTableData\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/Crud/ShowTableData.js"],"names":["React","DataGrid","useEffect","EditIcon","Button","useState","useRef","Created","useNavigate","ShowTableData","open","setOpen","opendata","setOpenData","data","setData","id","setId","username","setUserName","email","setEmail","getData","tabledate","setTabledata","fetch","then","json","console","log","result","response","editData","userid","item","deleteData","method","columns","field","headerName","width","height","renderCell","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState, useRef } from 'react';\nimport Created  from './Created';\nimport { useNavigate } from 'react-router-dom';\n\nconst ShowTableData = () => {\n    const [open, setOpen] = useState(false);\n    const [opendata, setOpenData] = useState(false);\n    const [data, setData] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [username, setUserName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n\n    useEffect(() => {\n        getData();\n    }, []) \nconst [tabledate,setTabledata]= useState([])\nuseEffect (() => {\nfetch('http://localhost:3001/users')\n.then((data) =>data.json())\n.then((data) => setTabledata(data))\n}, [])\nconsole.log(tabledate)\nconst getData = () => {\n        fetch(\"http://localhost:3001/users\").then((result) => {\n            result.json().then((response) => {\n                setData(response);\n            })\n        })\n    }\nconst editData = (userid) => {\n    let item = data[userid - 1];\n    setId(item.id);\n    setUserName(item.username)\n    setEmail(item.email)\n    setOpen(true);\n}\nconst deleteData = (id) => {\n        \n    fetch(`http://localhost:3001/users/${id}`,\n        {\n            method: 'delete'\n\n        }).then((result) => {\n            result.json().then((response) => {\n                getData(response);\n            })\n        })\n}\nconst columns = [\n{ field: 'id', headerName: 'ID', width: 180 ,height:200},\n{ field: 'username', headerName: 'Name',width: 180 },\n{ field: 'email',headerName: 'Email',width: 180},\n{ field: 'Action', headerName: 'Action', width: 400,\nrenderCell: () => {\nreturn (\n<>\n<Button variant=\"contained\" color=\"primary\" onClick={editData} startIcon={<EditIcon />}>\nEdit\n</Button>\n\n&nbsp; &nbsp; &nbsp; &nbsp;\n<Button variant=\"contained\" color=\"primary\" onClick = {deleteData} startIcon={<DeleteI />}>\nDelete\n</Button>\n</>\n);\n}\n}\n];\n\n return(\n <>\n  <h1>User Information</h1>\n  <Created/>\n  <div style={{ height: 300, width: '80%', margin: \"50px\" }}>\n  <DataGrid rows={tabledate} columns={columns} pageSize={3}/> \n  </div> \n  </>\n  )\n }\n\nexport default ShowTableData;"]},"metadata":{},"sourceType":"module"}