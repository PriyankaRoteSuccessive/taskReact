{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/module/ShowdataTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactDOM from 'react-dom';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { TextareaAutosize } from '@mui/base';\nimport { useState, useRef } from 'react';\nimport { Header } from '../module';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 180\n}, {\n  field: 'username',\n  headerName: 'Name',\n  width: 180\n}, {\n  field: 'email',\n  headerName: 'Email',\n  width: 180\n}, {\n  field: \"edit\",\n  headerName: \"Edit\",\n  width: 200,\n  renderCell: () => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 64\n      }, this),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this);\n  }\n}, {\n  field: \"delete\",\n  headerName: \"Delete\",\n  width: 200,\n  renderCell: () => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 64\n      }, this),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  }\n}];\n\nconst ShowdataTable = () => {\n  _s();\n\n  const [tabledate, setTabledata] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/users').then(data => data.json()).then(data => setTabledata(data));\n  }, []);\n  console.log(tabledate);\n  const SORTERS = {\n    NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n    NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n    STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n    STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n  };\n\n  const getSorter = data => {\n    const mapper = x => x[data.field];\n\n    let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n    if (data.field === \"id\") {\n      sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n    } else {\n      sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n    }\n\n    return sorter;\n  };\n\n  let count = tasks.length;\n  const service = {\n    fetchItems: payload => {\n      let result = Array.from(tasks);\n      result = result.sort(getSorter(payload.sort));\n      return Promise.resolve(result);\n    },\n    create: task => {\n      count += 1;\n      tasks.push({ ...task,\n        id: count\n      });\n      return Promise.resolve(task);\n    },\n    update: data => {\n      const task = tasks.find(t => t.id === data.id);\n      task.title = data.title;\n      task.description = data.description;\n      return Promise.resolve(task);\n    },\n    delete: data => {\n      const task = tasks.find(t => t.id === data.id);\n      tasks = tasks.filter(t => t.id !== task.id);\n      return Promise.resolve(task);\n    }\n  };\n  const styles = {\n    container: {\n      margin: \"auto\",\n      width: \"fit-content\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 300,\n        width: '80%',\n        margin: \"50px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: tabledate,\n        columns: columns,\n        pageSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n        title: \"Task Creation\",\n        message: \"Create a new task!\",\n        trigger: \"Create Task\",\n        onSubmit: task => service.create(task),\n        submitText: \"Create\",\n        validate: values => {\n          const errors = {};\n\n          if (!values.title) {\n            errors.title = \"Please, provide task's title\";\n          }\n\n          if (!values.description) {\n            errors.description = \"Please, provide task's description\";\n          }\n\n          return errors;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n        title: \"Task Update Process\",\n        message: \"Update task\",\n        trigger: \"Update\",\n        onSubmit: task => service.update(task),\n        submitText: \"Update\",\n        validate: values => {\n          const errors = {};\n\n          if (!values.id) {\n            errors.id = \"Please, provide id\";\n          }\n\n          if (!values.title) {\n            errors.title = \"Please, provide task's title\";\n          }\n\n          if (!values.description) {\n            errors.description = \"Please, provide task's description\";\n          }\n\n          return errors;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DeleteForm, {\n        title: \"Task Delete Process\",\n        message: \"Are you sure you want to delete the task?\",\n        trigger: \"Delete\",\n        onSubmit: task => service.delete(task),\n        submitText: \"Delete\",\n        validate: values => {\n          const errors = {};\n\n          if (!values.id) {\n            errors.id = \"Please, provide id\";\n          }\n\n          return errors;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowdataTable, \"CWbACz2Vp8a56QEuc40L5hAt3eQ=\");\n\n_c = ShowdataTable;\nexport default ShowdataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowdataTable\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/module/ShowdataTable.js"],"names":["React","DataGrid","useEffect","EditIcon","Button","ReactDOM","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Box","InputLabel","MenuItem","FormControl","Select","TextareaAutosize","useState","useRef","Header","columns","field","headerName","width","renderCell","ShowdataTable","tabledate","setTabledata","fetch","then","data","json","console","log","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","x","sorter","direction","count","tasks","length","service","fetchItems","payload","result","Array","from","sort","Promise","resolve","create","task","push","id","update","find","t","title","description","delete","filter","styles","container","margin","height","values","errors"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactDOM from 'react-dom';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { TextareaAutosize } from '@mui/base';\nimport { useState, useRef } from 'react';\nimport { Header } from '../module';\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 180 },\n  { field: 'username', headerName: 'Name',width: 180 },\n  { field: 'email',headerName: 'Email',width: 180},\n  { field: \"edit\",headerName: \"Edit\",width: 200,\n    renderCell: () => {\n      return (\n        <Button variant=\"contained\" color=\"primary\" startIcon={<EditIcon />}>\n          Edit\n        </Button>\n      );\n    }\n  },\n  { field: \"delete\",headerName: \"Delete\",width: 200,\n    renderCell: () => {\n      return (\n        <Button variant=\"contained\" color=\"primary\" startIcon={<EditIcon />}>\n          Delete\n        </Button>\n      );\n    }\n  },\n];\nconst ShowdataTable = () => {\n    const [tabledate,setTabledata]= useState([])\n    useEffect (() => {\n fetch('http://localhost:3001/users')\n   .then((data) =>data.json())\n .then((data) => setTabledata(data))\n}, [])\nconsole.log(tabledate)\n\n    const SORTERS = {\n      NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n      NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n      STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n      STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n    };\n    \n    const getSorter = data => {\n      const mapper = x => x[data.field];\n      let sorter = SORTERS.STRING_ASCENDING(mapper);\n    \n      if (data.field === \"id\") {\n        sorter =\n          data.direction === \"ascending\"\n            ? SORTERS.NUMBER_ASCENDING(mapper)\n            : SORTERS.NUMBER_DESCENDING(mapper);\n      } else {\n        sorter =\n          data.direction === \"ascending\"\n            ? SORTERS.STRING_ASCENDING(mapper)\n            : SORTERS.STRING_DESCENDING(mapper);\n      }\n    \n      return sorter;\n    };\n    \n    let count = tasks.length;\n    const service = {\n      fetchItems: payload => {\n        let result = Array.from(tasks);\n        result = result.sort(getSorter(payload.sort));\n        return Promise.resolve(result);\n      },\n      create: task => {\n        count += 1;\n        tasks.push({\n          ...task,\n          id: count\n        });\n        return Promise.resolve(task);\n      },\n      update: data => {\n        const task = tasks.find(t => t.id === data.id);\n        task.title = data.title;\n        task.description = data.description;\n        return Promise.resolve(task);\n      },\n      delete: data => {\n        const task = tasks.find(t => t.id === data.id);\n        tasks = tasks.filter(t => t.id !== task.id);\n        return Promise.resolve(task);\n      }\n    };\n    \n    const styles = {\n      container: { margin: \"auto\", width: \"fit-content\" }\n    };\n    \n  \nreturn(\n<>\n<Header/>\n<h1>hello</h1>\n<div style={{ height: 300, width: '80%', margin: \"50px\" }}>\n      <DataGrid\n        rows={tabledate}\n        columns={columns}\n        pageSize={3}\n      />\n      <CreateForm\n        title=\"Task Creation\"\n        message=\"Create a new task!\"\n        trigger=\"Create Task\"\n        onSubmit={task => service.create(task)}\n        submitText=\"Create\"\n        validate={values => {\n          const errors = {};\n          if (!values.title) {\n            errors.title = \"Please, provide task's title\";\n          }\n\n          if (!values.description) {\n            errors.description = \"Please, provide task's description\";\n          }\n\n          return errors;\n        }}\n      />\n\n      <UpdateForm\n        title=\"Task Update Process\"\n        message=\"Update task\"\n        trigger=\"Update\"\n        onSubmit={task => service.update(task)}\n        submitText=\"Update\"\n        validate={values => {\n          const errors = {};\n\n          if (!values.id) {\n            errors.id = \"Please, provide id\";\n          }\n\n          if (!values.title) {\n            errors.title = \"Please, provide task's title\";\n          }\n\n          if (!values.description) {\n            errors.description = \"Please, provide task's description\";\n          }\n\n          return errors;\n        }}\n      />\n\n      <DeleteForm\n        title=\"Task Delete Process\"\n        message=\"Are you sure you want to delete the task?\"\n        trigger=\"Delete\"\n        onSubmit={task => service.delete(task)}\n        submitText=\"Delete\"\n        validate={values => {\n          const errors = {};\n          if (!values.id) {\n            errors.id = \"Please, provide id\";\n          }\n          return errors;\n        }}\n      />\n     </div>  \n</>\n)\n}\n\nexport default ShowdataTable;"]},"metadata":{},"sourceType":"module"}