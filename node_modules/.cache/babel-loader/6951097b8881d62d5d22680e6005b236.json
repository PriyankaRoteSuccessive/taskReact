{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/component/timer20.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Timer20 = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n\n  const Increment = () => {\n    let FirstCount = counter;\n    let nextCount = true;\n    const interval = setInterval(() => {\n      console.log(FirstCount);\n\n      if (forword) {\n        if (FirstCount !== 20) {\n          FirstCount = FirstCount + 1;\n        } else {\n          forword = false;\n          FirstCount = FirstCount - 1;\n        }\n      } else if (!forword) {\n        if (FirstCount != 17) {\n          FirstCount = FirstCount - 1;\n        } else {\n          FirstCount = 0;\n          clearInterval(interval);\n        }\n      }\n\n      setCounter(FirstCount);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    Increment();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counter: \", counter, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Timer20, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\n_c = Timer20;\nexport default Timer20;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer20\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/component/timer20.js"],"names":["React","useState","useEffect","Timer20","counter","setCounter","Increment","FirstCount","nextCount","interval","setInterval","console","log","forword","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;;AACA,QAAMK,SAAS,GAAG,MAAM;AACtB,QAAIC,UAAU,GAAGH,OAAjB;AACA,QAAII,SAAS,GAAG,IAAhB;AACA,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;;AACA,UAAIM,OAAJ,EAAa;AACX,YAAIN,UAAU,KAAK,EAAnB,EAAuB;AACrBA,UAAAA,UAAU,GAAGA,UAAU,GAAG,CAA1B;AACD,SAFD,MAEO;AACLM,UAAAA,OAAO,GAAG,KAAV;AACAN,UAAAA,UAAU,GAAGA,UAAU,GAAG,CAA1B;AACD;AACF,OAPD,MAOO,IAAI,CAACM,OAAL,EAAc;AACnB,YAAIN,UAAU,IAAI,EAAlB,EAAsB;AACpBA,UAAAA,UAAU,GAAGA,UAAU,GAAG,CAA1B;AACD,SAFD,MAEO;AACLA,UAAAA,UAAU,GAAG,CAAb;AACAO,UAAAA,aAAa,CAACL,QAAD,CAAb;AACD;AACF;;AACDJ,MAAAA,UAAU,CAACE,UAAD,CAAV;AACD,KAlB2B,EAkBzB,IAlByB,CAA5B;AAmBD,GAtBD;;AAuBAL,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,2BACE;AAAA,8BAAcF,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAjCD;;GAAMD,O;;KAAAA,O;AAkCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nconst Timer20 = () => {\n  const [counter, setCounter] = useState(0);\n  const Increment = () => {\n    let FirstCount = counter;\n    let nextCount = true;\n    const interval = setInterval(() => {\n      console.log(FirstCount);\n      if (forword) {\n        if (FirstCount !== 20) {\n          FirstCount = FirstCount + 1;\n        } else {\n          forword = false;\n          FirstCount = FirstCount - 1;\n        }\n      } else if (!forword) {\n        if (FirstCount != 17) {\n          FirstCount = FirstCount - 1;\n        } else {\n          FirstCount = 0;\n          clearInterval(interval);\n        }\n      }\n      setCounter(FirstCount);\n    }, 1000)\n  }\n  useEffect(() => {\n    Increment();\n  }, [])\n  return (\n    <>\n      <h1>Counter: {counter} </h1>\n    </>\n  )\n}\nexport default Timer20;\n\n"]},"metadata":{},"sourceType":"module"}