{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/Crud/ShowTableData.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState, useRef } from 'react';\nimport Created from './Created';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowTableData = () => {\n  _s();\n\n  const [id, setID] = useState();\n  const [username, setName] = useState();\n  const [email, setEmail] = useState();\n  const [tabledate, setTabledata] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/users').then(data => data.json()).then(data => setTabledata(data));\n  }, []);\n  console.log(tabledate);\n\n  function editData(userid) {\n    let item = data[userid - 1];\n    setId(item.id);\n    setUserName(item.username);\n    setEmail(item.email);\n    setOpen(true);\n  }\n\n  const deleteData = id => {\n    fetch(`http://localhost:3001/users/${id}`, {\n      method: 'delete'\n    }).then(result => {\n      result.json().then(response => {\n        getData(response);\n      });\n    });\n  };\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 180,\n    height: 200\n  }, {\n    field: 'username',\n    headerName: 'Name',\n    width: 180\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    width: 180\n  }, {\n    field: 'Action',\n    headerName: 'Action',\n    width: 400,\n    renderCell: () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: editData,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 75\n          }, this),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 1\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: deleteData,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 79\n          }, this),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Created, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 300,\n        width: '80%',\n        margin: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: tabledate,\n        columns: columns,\n        pageSize: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowTableData, \"YDqf+3FeShgNBFJnNlr7P578Lms=\");\n\n_c = ShowTableData;\nexport default ShowTableData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowTableData\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/Crud/ShowTableData.js"],"names":["React","DataGrid","useEffect","EditIcon","Button","useState","useRef","Created","useNavigate","ShowTableData","id","setID","username","setName","email","setEmail","tabledate","setTabledata","fetch","then","data","json","console","log","editData","userid","item","setId","setUserName","setOpen","deleteData","method","result","response","getData","columns","field","headerName","width","height","renderCell","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState, useRef } from 'react';\nimport Created  from './Created';\nimport { useNavigate } from 'react-router-dom';\n\nconst ShowTableData = () => {\nconst [id,setID]= useState();\nconst [username, setName] = useState();\nconst [email, setEmail] = useState();\n \nconst [tabledate,setTabledata]= useState([])\nuseEffect (() => {\nfetch('http://localhost:3001/users')\n.then((data) =>data.json())\n.then((data) => setTabledata(data))\n}, [])\nconsole.log(tabledate)\n\nfunction editData(userid) {\n    let item = data[userid - 1];\n    setId(item.id);\n    setUserName(item.username)\n    setEmail(item.email)\n    setOpen(true);\n}\nconst deleteData = (id) => {\n        \n    fetch(`http://localhost:3001/users/${id}`,\n        {\n            method: 'delete'\n\n        }).then((result) => {\n            result.json().then((response) => {\n                getData(response);\n            })\n        })\n}\nconst columns = [\n{ field: 'id', headerName: 'ID', width: 180 ,height:200},\n{ field: 'username', headerName: 'Name',width: 180 },\n{ field: 'email',headerName: 'Email',width: 180},\n{ field: 'Action', headerName: 'Action', width: 400,\nrenderCell: () => {\nreturn (\n<>\n<Button variant=\"contained\" color=\"primary\" onClick={editData} startIcon={<EditIcon />}>\nEdit\n</Button>\n\n&nbsp; &nbsp; &nbsp; &nbsp;\n<Button variant=\"contained\" color=\"primary\" onClick = {deleteData} startIcon={<EditIcon />}>\nDelete\n</Button>\n</>\n);\n}\n}\n];\n\nreturn(\n<>\n<h1>User Information</h1>\n<Created/>\n<div style={{ height: 300, width: '80%', margin: \"50px\" }}>\n<DataGrid\nrows={tabledate}\ncolumns={columns}\npageSize={4}\n/> \n</div> \n</>\n)\n}\n\nexport default ShowTableData;"]},"metadata":{},"sourceType":"module"}