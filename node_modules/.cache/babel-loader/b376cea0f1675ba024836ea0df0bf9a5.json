{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/Crud/CrudTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Header } from '../module';\nimport Validation from \"./validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CrudTable = () => {\n  _s();\n\n  // const emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  // const emailRegex=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const StyledTableCell = styled(TableCell)(_ref => {\n    let {\n      theme\n    } = _ref;\n    return {\n      [`&.${tableCellClasses.head}`]: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white\n      },\n      [`&.${tableCellClasses.body}`]: {\n        fontSize: 14\n      }\n    };\n  });\n  const StyledTableRow = styled(TableRow)(_ref2 => {\n    let {\n      theme\n    } = _ref2;\n    return {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover\n      },\n      // hide last border\n      '&:last-child td, &:last-child th': {\n        border: 0\n      }\n    };\n  });\n  const [id, setId] = useState(\"\");\n  const [username, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [opendata, setOpenData] = useState(false);\n  let nameRegEx = /^[A-Za-z]+$/;\n  let emailRegEx = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/; //   const initialValues = { username: \"\", email: \"\", password: \"\" };\n  //   const [formValues, setFormValues] = useState(initialValues);\n  //   const [formErrors, setFormErrors] = useState({});\n  //   const [isSubmit, setIsSubmit] = useState(false);\n  // const [state, setState] = useState({\n  //     username: \"\",\n  //     email: \"\",\n  //     password: \"\"\n  //   });\n  //   const handleChange = (e) => {\n  //     const { name, value } = e.target;\n  //     setFormValues({ ...formValues, [name]: value });\n  //   };\n  //   const handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     setFormErrors(validate(formValues));\n  //     setIsSubmit(true);\n  //   };\n  // const handleSubmit = (event) => {\n  //     if((state.username == \"\") || (state.email == \"\"))\n  //     {\n  //       alert(\"Please Fill All Required Fields\");\n  //       event.preventDefault();\n  //     }    \n  //     else \n  //     if (!state.email.length) {\n  //       alert('Please Enter Valid Email');\n  //       event.preventDefault();\n  //     } \n  //     else if (!emailRegex.test(state.email)) {\n  //       alert('Please Enter Valid Email');\n  //       event.preventDefault();\n  //     }\n  //    else{\n  //     event.preventDefault();\n  //     console.log(state);\n  //     console.log(`Name: `+ state.username +`, Email: ` + state.email );\n  //     alert(`Successfully Form Submit. Your Name: `+ state.username +`, Email: `+ state.email +``);\n  //    }\n  //   };\n  // const handleInputChange = (event) => {\n  //     setState((prevProps) => ({\n  //       ...prevProps,\n  //       [event.target.username]: event.target.value\n  //     }));\n  //   };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleOpenData = () => {\n    setOpenData(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setId('');\n    setName('');\n    setEmail('');\n  };\n\n  const handleClosed = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []); //     console.log(formErrors);\n  //     if (Object.keys(formErrors).length === 0 && isSubmit) {\n  //       console.log(formValues);\n  //     }\n  //   }, [formErrors]);\n\n  function getData() {\n    axios.get(\"http://localhost:3001/users\").then(response => {\n      setData(response.data);\n    });\n  }\n\n  function addData() {\n    let x = {\n      username,\n      email\n    };\n    let nameCheck = nameRegEx.test(x.username);\n    let emailCheck = emailRegEx.test(x.email);\n\n    if (nameCheck && emailCheck) {\n      axios.post('http://localhost:3001/users', {\n        id: id,\n        username: username,\n        email: email\n      }).then(response => {\n        getData(response.data);\n      });\n      setOpenData(false);\n    }\n  }\n\n  function editData(userid) {\n    setOpen(true);\n    const item = data[userid - 1];\n    setId(item.id);\n    setName(item.username);\n    setEmail(item.email);\n  }\n\n  function update() {\n    axios.put(`http://localhost:3001/users/${id}`, {\n      id: id,\n      username: username,\n      email: email\n    }).then(response => {\n      console.log(\"resp is\", response);\n      getData(response.data);\n    });\n    setOpen(false);\n  }\n\n  function deleteUser(id) {\n    axios.delete(`http://localhost:3001/users/${id}`).then(response => {\n      getData(response.data);\n    });\n  } // const validate = (values) => {\n  //     const errors = {};\n  //     const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n  //     if (!values.username) {\n  //       errors.username = \"Username is required!\";\n  //     }\n  //     if (!values.email) {t=\"standard\"  \n  //       errors.email = \"Email is required!\";\n  //     } else if (!regex.test(values.email)) {\n  //       errors.email = \"This is not a valid email format!\";\n  //     }\n  //     return errors;\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleOpenData,\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: opendata,\n      onClose: handleClosed,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Enter Detail's\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"id\",\n          label: \"Id\",\n          type: \"Id\",\n          fullWidth: true,\n          variant: \"standard\",\n          value: id,\n          onChange: e => setId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"userName\",\n          label: \"UserName\",\n          type: \"userName\",\n          fullWidth: true,\n          variant: \"standard\",\n          value: username,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Email Address\",\n          type: \"email\",\n          fullWidth: true,\n          variant: \"standard\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addData,\n          children: \"Add Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"id\",\n          label: \"Id\",\n          type: \"Id\",\n          fullWidth: true,\n          variant: \"standard\",\n          value: id,\n          onChange: e => setId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"userName\",\n          label: \"UserName\",\n          type: \"userName\",\n          fullWidth: true,\n          variant: \"standard\",\n          value: username,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Email Address\",\n          type: \"email\",\n          fullWidth: true,\n          variant: \"standard\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: update,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 700\n        },\n        \"aria-label\": \"customized table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: data.map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: row.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: row.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                style: {\n                  marginRight: 10\n                },\n                onClick: () => editData(row.id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => deleteUser(row.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CrudTable, \"uXUR/nqj32DWhLWwwNm1W3kCXAo=\");\n\n_c = CrudTable;\nexport default CrudTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrudTable\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/Crud/CrudTable.js"],"names":["React","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","useState","useEffect","axios","Header","Validation","CrudTable","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","action","hover","border","id","setId","username","setName","email","setEmail","data","setData","open","setOpen","opendata","setOpenData","nameRegEx","emailRegEx","handleOpen","handleOpenData","handleClose","handleClosed","getData","get","then","response","addData","x","nameCheck","test","emailCheck","post","editData","userid","item","update","put","console","log","deleteUser","delete","e","target","value","minWidth","map","row","marginRight","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Header } from '../module';\nimport Validation from \"./validation\";\n\nconst CrudTable = () => {\n  // const emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  // const emailRegex=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  const StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n    },\n  }));\n\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0,\n    },\n  }));\n\n  const [id, setId] = useState(\"\");\n  const [username, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [data, setData] = useState([])\n  const [open, setOpen] = useState(false);\n  const [opendata, setOpenData] = useState(false);\n  let nameRegEx = /^[A-Za-z]+$/\n  let emailRegEx = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/\n  //   const initialValues = { username: \"\", email: \"\", password: \"\" };\n  //   const [formValues, setFormValues] = useState(initialValues);\n  //   const [formErrors, setFormErrors] = useState({});\n  //   const [isSubmit, setIsSubmit] = useState(false);\n  // const [state, setState] = useState({\n  //     username: \"\",\n  //     email: \"\",\n  //     password: \"\"\n  //   });\n  //   const handleChange = (e) => {\n  //     const { name, value } = e.target;\n  //     setFormValues({ ...formValues, [name]: value });\n  //   };\n\n  //   const handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     setFormErrors(validate(formValues));\n  //     setIsSubmit(true);\n  //   };\n  // const handleSubmit = (event) => {\n  //     if((state.username == \"\") || (state.email == \"\"))\n  //     {\n  //       alert(\"Please Fill All Required Fields\");\n  //       event.preventDefault();\n  //     }    \n  //     else \n  //     if (!state.email.length) {\n  //       alert('Please Enter Valid Email');\n  //       event.preventDefault();\n  //     } \n  //     else if (!emailRegex.test(state.email)) {\n  //       alert('Please Enter Valid Email');\n  //       event.preventDefault();\n  //     }\n  //    else{\n  //     event.preventDefault();\n  //     console.log(state);\n  //     console.log(`Name: `+ state.username +`, Email: ` + state.email );\n  //     alert(`Successfully Form Submit. Your Name: `+ state.username +`, Email: `+ state.email +``);\n  //    }\n  //   };\n  // const handleInputChange = (event) => {\n  //     setState((prevProps) => ({\n  //       ...prevProps,\n  //       [event.target.username]: event.target.value\n  //     }));\n  //   };\n  const handleOpen = () => {\n    setOpen(true);\n\n  };\n  const handleOpenData = () => {\n    setOpenData(true);\n  }\n  const handleClose = () => {\n    setOpen(false);\n    setId('');\n    setName('');\n    setEmail('');\n  };\n  const handleClosed = () => {\n    setOpen(false);\n  };\n  useEffect(() => {\n    getData();\n  },\n    []);\n  //     console.log(formErrors);\n  //     if (Object.keys(formErrors).length === 0 && isSubmit) {\n  //       console.log(formValues);\n  //     }\n  //   }, [formErrors]);\n\n\n  function getData() {\n    axios\n      .get(\"http://localhost:3001/users\")\n      .then((response) => {\n        setData(response.data);\n      })\n  }\n  function addData() {\n    let x = { username, email }\n    let nameCheck = nameRegEx.test(x.username)\n    let emailCheck = emailRegEx.test(x.email)\n\n    if (nameCheck && emailCheck) {\n      axios.post('http://localhost:3001/users', {\n        id: id,\n        username: username,\n        email: email\n      })\n        .then((response) => {\n          getData(response.data);\n        })\n      setOpenData(false);\n    }\n  }\n  function editData(userid) {\n    setOpen(true);\n    const item = data[userid - 1];\n    setId(item.id);\n    setName(item.username)\n    setEmail(item.email)\n\n  }\n  function update() {\n    axios.put(`http://localhost:3001/users/${id}`,\n      {\n        id: id,\n        username: username,\n        email: email\n      })\n      .then((response) => {\n        console.log(\"resp is\", response)\n        getData(response.data);\n      })\n    setOpen(false);\n  }\n\n  function deleteUser(id) {\n    axios.delete(`http://localhost:3001/users/${id}`)\n      .then((response) => {\n        getData(response.data);\n      })\n  }\n\n  // const validate = (values) => {\n  //     const errors = {};\n  //     const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n  //     if (!values.username) {\n  //       errors.username = \"Username is required!\";\n  //     }\n  //     if (!values.email) {t=\"standard\"  \n  //       errors.email = \"Email is required!\";\n  //     } else if (!regex.test(values.email)) {\n  //       errors.email = \"This is not a valid email format!\";\n  //     }\n  //     return errors;\n  //   };\n\n  return (\n    <>\n      {/* <form onSubmit={handleSubmit}> */}\n      <Header />\n      {/* ADD Button */}\n      <Button variant=\"outlined\" onClick={handleOpenData}>Add User</Button>\n      <Dialog open={opendata} onClose={handleClosed}>\n        <DialogTitle>Enter Detail's</DialogTitle>\n        <DialogContent>\n          <TextField autoFocus margin=\"dense\" id=\"id\" label=\"Id\" type=\"Id\" fullWidth variant=\"standard\" value={id}\n            onChange={(e) => setId(e.target.value)} />\n          <TextField autoFocus margin=\"dense\" id=\"userName\" label=\"UserName\" type=\"userName\" fullWidth variant=\"standard\" value={username}\n            onChange={(e) => setName(e.target.value)} />\n          {/* //   onChange={handleInputChange} */}\n          {/* <p>{formErrors.username}</p> */}\n          <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Email Address\" type=\"email\" fullWidth variant=\"standard\" value={email}\n            onChange={(e) => setEmail(e.target.value)} />\n          {/* //  onChange={(e) => setEmail(e.target.value)} onChange={handleInputChange} */}\n          {/* <p>{formErrors.email}</p> */}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={addData}>Add Data</Button>\n        </DialogActions>\n      </Dialog>\n      {/* Edit */}\n\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Edit User</DialogTitle>\n        <DialogContent>\n          <TextField autoFocus margin=\"dense\" id=\"id\" label=\"Id\" type=\"Id\" fullWidth variant=\"standard\" value={id}\n            onChange={(e) => setId(e.target.value)} />\n          <TextField autoFocus margin=\"dense\" id=\"userName\" label=\"UserName\" type=\"userName\" fullWidth variant=\"standard\" value={username}\n            onChange={(e) => setName(e.target.value)} />\n          {/* <p>{formErrors.username}</p> */}\n          <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Email Address\" type=\"email\" fullWidth variant=\"standard\" value={email}\n            onChange={(e) => setEmail(e.target.value)} />\n          {/* <p>{formErrors.email}</p> */}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button type=\"submit\" onClick={update}>Update</Button>\n        </DialogActions>\n      </Dialog>\n      {/* Table  */}\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"right\">ID</StyledTableCell>\n              <StyledTableCell align=\"right\">Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Email</StyledTableCell>\n              <StyledTableCell align=\"right\">Action</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <StyledTableRow key={row.name}>\n                <StyledTableCell align=\"right\">{row.id}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.username}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.email}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Button variant=\"contained\" style={{ marginRight: 10 }} onClick={() => editData(row.id)} >Edit</Button>\n                  <Button variant=\"contained\" onClick={() => deleteUser(row.id)}>Delete</Button> </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {/* </form> */}\n    </>\n  );\n}\nexport default CrudTable;"]},"metadata":{},"sourceType":"module"}