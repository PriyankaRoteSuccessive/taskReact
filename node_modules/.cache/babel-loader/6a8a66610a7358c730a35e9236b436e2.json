{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/Crud/ShowTableData.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState } from 'react';\nimport Created from './Created';\nimport Edit from './Edit';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowTableData = () => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [opendata, setOpenData] = useState(false);\n  const [data, setData] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    getData();\n  });\n  const [tabledate, setTabledata] = useState([]);\n  useEffect(() => {\n    axios('http://localhost:3001/users').then(data => data.json()).then(data => setTabledata(data));\n  }, []);\n  console.log(tabledate);\n\n  function getData() {\n    axios.get(\"http://localhost:3001/users\").then(result => {\n      result.json().then(response => {\n        setData(response);\n      });\n    });\n  }\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 180,\n    height: 200\n  }, {\n    field: 'username',\n    headerName: 'Name',\n    width: 180\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    width: 180\n  }, {\n    field: 'Action',\n    headerName: 'Action',\n    width: 400,\n    renderCell: () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 1\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 56\n          }, this),\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Created, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 300,\n        width: '80%',\n        margin: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: tabledate,\n        columns: columns,\n        pageSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowTableData, \"+0x890K2xCc/4M6d58pJSsyda2U=\");\n\n_c = ShowTableData;\nexport default ShowTableData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowTableData\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/Crud/ShowTableData.js"],"names":["React","DataGrid","useEffect","DeleteIcon","Button","useState","Created","Edit","useNavigate","useParams","axios","ShowTableData","open","setOpen","opendata","setOpenData","data","setData","id","setId","username","setUserName","email","setEmail","getData","tabledate","setTabledata","then","json","console","log","get","result","response","columns","field","headerName","width","height","renderCell","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useEffect } from 'react';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState} from 'react';\nimport Created  from './Created';\nimport Edit from './Edit';\nimport { useNavigate,useParams } from 'react-router-dom';\nimport axios from \"axios\";\nconst ShowTableData = () => {\n    const [open, setOpen] = useState(false);\n    const [opendata, setOpenData] = useState(false);\n    const [data, setData] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [username, setUserName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n\n    useEffect(() => {\n        getData();\n    }) \nconst [tabledate,setTabledata]= useState([])\nuseEffect (() => {\naxios('http://localhost:3001/users')\n.then((data) =>data.json())\n.then((data) => setTabledata(data))\n}, [])\nconsole.log(tabledate)\nfunction getData() {\n    axios.get(\"http://localhost:3001/users\").then((result) => {\n        result.json().then((response) => {\n            setData(response);\n        })\n    })\n}\n\n\nconst columns = [\n{ field: 'id', headerName: 'ID', width: 180 ,height:200},\n{ field: 'username', headerName: 'Name',width: 180 },\n{ field: 'email',headerName: 'Email',width: 180},\n{ field: 'Action', headerName: 'Action', width: 400,\nrenderCell: () => {\nreturn (\n<>\n{/* <Button variant=\"contained\" color=\"primary\"  startIcon={<EditIcon />}>\nEdit\n</Button> */}\n<Edit/>\n\n&nbsp; &nbsp; &nbsp; &nbsp;\n<Button variant=\"contained\" color=\"primary\" startIcon={<DeleteIcon />}> Delete </Button>\n</>\n);\n}\n}\n];\n\n return(\n <>\n  <h1>User Information</h1>\n  <Created/>\n  <div style={{ height: 300, width: '80%', margin: \"50px\" }}>\n  <DataGrid rows={tabledate} columns={columns} pageSize={3}/> \n  </div> \n  </>\n  )\n }\n\nexport default ShowTableData;"]},"metadata":{},"sourceType":"module"}