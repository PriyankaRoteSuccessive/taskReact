{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/component/timer20.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Timer20 = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n\n  const Updater = () => {\n    let initialcount = count;\n    let forword = true;\n    const interval = setInterval(() => {\n      console.log(initialcount);\n\n      if (forword) {\n        if (initialcount !== 20) {\n          initialcount = initialcount + 1;\n        } else {\n          forword = false;\n          initialcount = initialcount - 1;\n        }\n      } else if (!forword) {\n        if (initialcount != 17) {\n          initialcount = initialcount - 1;\n        } else {\n          initialcount = 0;\n          clearInterval(interval);\n        }\n      }\n\n      setCount(initialcount);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    Updater();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counts: \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Timer20, \"+kFAL6dyEfVjbO3TF2DqP3dbiXs=\");\n\n_c = Timer20;\nexport default Timer20;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer20\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/component/timer20.js"],"names":["React","useState","useEffect","Timer20","counter","setCounter","Updater","initialcount","count","forword","interval","setInterval","console","log","clearInterval","setCount"],"mappings":";;;AAAC,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AACA,MAAMC,OAAO,GAAE,MAAI;AAAA;;AAChB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;;AACA,QAAMK,OAAO,GAAE,MAAI;AACf,QAAIC,YAAY,GAAEC,KAAlB;AACA,QAAIC,OAAO,GAAC,IAAZ;AACL,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAI;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;;AACA,UAAGE,OAAH,EAAW;AACC,YAAGF,YAAY,KAAG,EAAlB,EAAqB;AACjBA,UAAAA,YAAY,GAAEA,YAAY,GAAC,CAA3B;AACD,SAFH,MAEO;AACHE,UAAAA,OAAO,GAAC,KAAR;AACAF,UAAAA,YAAY,GAAEA,YAAY,GAAC,CAA3B;AACD;AACN,OAPT,MAOc,IAAG,CAACE,OAAJ,EAAY;AACd,YAAGF,YAAY,IAAE,EAAjB,EAAoB;AAChBA,UAAAA,YAAY,GAAEA,YAAY,GAAC,CAA3B;AACF,SAFF,MAEO;AACHA,UAAAA,YAAY,GAAC,CAAb;AACIO,UAAAA,aAAa,CAACJ,QAAD,CAAb;AACN;AACJ;;AACFK,MAAAA,QAAQ,CAACR,YAAD,CAAR;AACH,KAlBsB,EAkBrB,IAlBqB,CAA5B;AAmBE,GAtBD;;AAuBAL,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,OAAO;AACV,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI;AAAA,2BACI;AAAA,6BAAaE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKD,CAjCF;;GAAML,O;;KAAAA,O;AAkCL,eAAeA,OAAf","sourcesContent":[" import React, { useState, useEffect } from 'react';\n const Timer20 =()=>{\n    const [counter,setCounter] =useState(0);\n    const Updater =()=>{\n        let initialcount= count;\n        let forword=true;\n   const interval=  setInterval(()=>{\n    console.log(initialcount);        \n    if(forword){\n                if(initialcount!==20){\n                    initialcount= initialcount+1;\n                  }else{\n                    forword=false;\n                    initialcount= initialcount-1;      \n                  }\n            }else if(!forword){\n                if(initialcount!=17){\n                    initialcount= initialcount-1;      \n                 } else{\n                    initialcount=0;\n                        clearInterval(interval);\n                 }\n             }\n            setCount(initialcount);\n        },1000)\n    }\n    useEffect(()=>{\n        Updater();\n    },[])\n    return(\n        <>\n            <h1>Counts: {count} </h1>\n        </>\n    )\n  }\n  export default Timer20;\n\n"]},"metadata":{},"sourceType":"module"}