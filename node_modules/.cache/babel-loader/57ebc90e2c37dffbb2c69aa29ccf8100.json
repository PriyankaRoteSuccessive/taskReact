{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/component/timer20.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Timer20 = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n\n  const Increment = () => {\n    let a = counter;\n    let forword = true;\n    const interval = setInterval(() => {\n      console.log(a);\n\n      if (forword) {\n        if (a !== 20) {\n          a = a + 1;\n        } else {\n          forword = false;\n          initialcount = initialcount - 1;\n        }\n      } else if (!forword) {\n        if (initialcount != 17) {\n          initialcount = initialcount - 1;\n        } else {\n          initialcount = 0;\n          clearInterval(interval);\n        }\n      }\n\n      setCounter(initialcount);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    Increment();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counter: \", counter, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Timer20, \"+kFAL6dyEfVjbO3TF2DqP3dbiXs=\");\n\n_c = Timer20;\nexport default Timer20;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer20\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/component/timer20.js"],"names":["React","useState","useEffect","Timer20","counter","setCounter","Increment","a","forword","interval","setInterval","console","log","initialcount","clearInterval"],"mappings":";;;AAAC,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AACA,MAAMC,OAAO,GAAE,MAAI;AAAA;;AAChB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;;AACA,QAAMK,SAAS,GAAE,MAAI;AACjB,QAAIC,CAAC,GAAGH,OAAR;AACA,QAAII,OAAO,GAAC,IAAZ;AACL,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAI;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;;AACA,UAAGC,OAAH,EAAW;AACT,YAAGD,CAAC,KAAG,EAAP,EAAU;AACPA,UAAAA,CAAC,GAAEA,CAAC,GAAC,CAAL;AACU,SAFb,MAEiB;AACHC,UAAAA,OAAO,GAAC,KAAR;AACAK,UAAAA,YAAY,GAAEA,YAAY,GAAC,CAA3B;AACD;AACN,OAPT,MAOc,IAAG,CAACL,OAAJ,EAAY;AACd,YAAGK,YAAY,IAAE,EAAjB,EAAoB;AAChBA,UAAAA,YAAY,GAAEA,YAAY,GAAC,CAA3B;AACF,SAFF,MAEO;AACHA,UAAAA,YAAY,GAAC,CAAb;AACIC,UAAAA,aAAa,CAACL,QAAD,CAAb;AACN;AACJ;;AACFJ,MAAAA,UAAU,CAACQ,YAAD,CAAV;AACH,KAlBsB,EAkBrB,IAlBqB,CAA5B;AAmBE,GAtBD;;AAuBAX,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,SAAS;AACV,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI;AAAA,2BACI;AAAA,8BAAcF,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKD,CAjCF;;GAAMD,O;;KAAAA,O;AAkCL,eAAeA,OAAf","sourcesContent":[" import React, { useState, useEffect } from 'react';\n const Timer20 =()=>{\n    const [counter,setCounter] =useState(0);\n    const Increment =()=>{\n        let a = counter;\n        let forword=true;\n   const interval=  setInterval(()=>{\n    console.log(a);        \n    if(forword){\n      if(a!==20){\n         a= a+1;\n                  }else{\n                    forword=false;\n                    initialcount= initialcount-1;      \n                  }\n            }else if(!forword){\n                if(initialcount!=17){\n                    initialcount= initialcount-1;      \n                 } else{\n                    initialcount=0;\n                        clearInterval(interval);\n                 }\n             }\n            setCounter(initialcount);\n        },1000)\n    }\n    useEffect(()=>{\n      Increment();\n    },[])\n    return(\n        <>\n            <h1>Counter: {counter} </h1>\n        </>\n    )\n  }\n  export default Timer20;\n\n"]},"metadata":{},"sourceType":"module"}