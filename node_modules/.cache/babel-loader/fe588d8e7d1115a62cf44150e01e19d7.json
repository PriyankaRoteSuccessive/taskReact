{"ast":null,"code":"var _jsxFileName = \"/home/priyankarote/React Training/task1/src/CrudApi/AllUser.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport react, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, TableRow, TableBody, Button, makeStyles } from '@material-ui/core';\nimport { getUsers, deleteUser, editUser } from './get';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    width: '90%',\n    margin: '50px 0 0 50px'\n  },\n  thead: {\n    '& > *': {\n      fontSize: 20,\n      background: '#000000',\n      color: '#FFFFFF'\n    }\n  },\n  row: {\n    '& > *': {\n      fontSize: 18\n    }\n  }\n});\n\nconst AllUsers = user => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  const deleteUserData = async id => {\n    await deleteUser(id);\n    getAllUsers();\n  };\n\n  const getAllUsers = async () => {\n    let response = await getUsers();\n    setUsers(response.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          className: classes.thead,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n          className: classes.row,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              component: Link,\n              to: `/editUser/${user.id}`,\n              variant: \"contained\",\n              \"data-toggle\": \"modal\",\n              style: {\n                marginRight: 10\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              onClick: () => deleteUserData(user.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllUsers, \"wUx66kjHSG7OYlY904/jT4CTn1E=\", false, function () {\n  return [useStyles];\n});\n\n_c = AllUsers;\nexport default AllUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsers\");","map":{"version":3,"sources":["/home/priyankarote/React Training/task1/src/CrudApi/AllUser.js"],"names":["React","Link","react","useState","useEffect","Table","TableHead","TableCell","TableRow","TableBody","Button","makeStyles","getUsers","deleteUser","editUser","useStyles","table","width","margin","thead","fontSize","background","color","row","AllUsers","user","users","setUsers","classes","getAllUsers","deleteUserData","id","response","data","map","name","username","email","phone","marginRight"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport react, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, TableRow, TableBody, Button, makeStyles } from '@material-ui/core'\nimport { getUsers, deleteUser, editUser } from './get';\n\nconst useStyles = makeStyles({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 50px'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#000000',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    }\n})\nconst AllUsers = (user) => {\n    const [users, setUsers] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        getAllUsers();\n    }, []);\n    const deleteUserData = async (id) => {\n        await deleteUser(id);\n        getAllUsers();\n    }\n    const getAllUsers = async () => {\n        let response = await getUsers();\n        setUsers(response.data);\n    }\n    return (\n        <div>\n        <Table className={classes.table}>\n            <TableHead>\n                <TableRow className={classes.thead}>\n                    <TableCell>Id</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Username</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Phone</TableCell>\n                    <TableCell>Action</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {users.map((user) => (\n                    <TableRow className={classes.row} key={user.id}>\n                        <TableCell>{user.id}</TableCell>\n                        <TableCell>{user.name}</TableCell>\n                        <TableCell>{user.username}</TableCell>\n                        <TableCell>{user.email}</TableCell>\n                        <TableCell>{user.phone}</TableCell>\n                        <TableCell>     \n                        <Button color=\"primary\"  component={Link} to={`/editUser/${user.id}`}  variant=\"contained\" data-toggle=\"modal\" style={{marginRight:10}} >Edit</Button>\n                        <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteUserData(user.id)}>Delete</Button> \n                        </TableCell>\n                        </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n</div>\n    )\n}\nexport default AllUsers;"]},"metadata":{},"sourceType":"module"}